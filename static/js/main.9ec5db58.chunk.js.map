{"version":3,"sources":["components/Sidebar/style.module.scss","components/Category/style.module.scss","pages/Resume/style.module.scss","components/Area/style.module.scss","components/Area/index.jsx","components/Category/index.jsx","pages/Career/index.jsx","pages/Introduce/index.jsx","DB/index.js","pages/Tech/index.jsx","components/Sidebar/index.jsx","pages/Resume/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Area","children","title","className","styles","area","contents","Category","category","map","content","index","key","subTitle","subContents","subContent","subIndex","subDescription","Career","db","Introduce","Sidebar","profile","name","description","path","component","IntroducePage","CareerPage","Tech","Interest","sidebar","profileWrapper","profileImageWrapper","src","alt","profileName","profileDescription","data","link","to","sidebarDataReverse","SidebarData","slice","reverse","Resume","resume","leftSide","rightSide","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ec5db58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"style_sidebar__2pLeE\",\"profileWrapper\":\"style_profileWrapper__1C0bU\",\"profileImageWrapper\":\"style_profileImageWrapper__1ibHK\",\"profile\":\"style_profile__1mo-s\",\"profileName\":\"style_profileName__3iEP-\",\"profileDescription\":\"style_profileDescription__2q9NO\",\"contents\":\"style_contents__1eHCP\",\"link\":\"style_link__2i9a-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"style_category__3Z-cW\",\"title\":\"style_title__2tIHr\",\"contents\":\"style_contents__37wqV\",\"subTitle\":\"style_subTitle__tn6FO\",\"subDescription\":\"style_subDescription__2xbg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resume\":\"style_resume__3q8wH\",\"leftSide\":\"style_leftSide__1bdRY\",\"rightSide\":\"style_rightSide__einZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area\":\"style_area__ta5ji\",\"title\":\"style_title__3U05j\",\"contents\":\"style_contents__2IMuZ\"};","import React from 'react'\n\nimport styles from './style.module.scss'\n\nconst Area = ({ children, title }) => {\n  return (\n    <div className={styles.area}>\n      <h1 className={styles.title}>{title}</h1>\n      <div className={styles.contents}>{children}</div>\n    </div>\n  )\n}\n\nexport default Area\n","import React from 'react'\n\nimport styles from './style.module.scss'\n\nconst Category = ({ title, contents }) => {\n  const createSubContentsElements = (subContents) => (\n    <section className={styles.contents}>\n      {subContents.map((subContent, subIndex) => (\n        <section key={subIndex}>\n          <p className={styles.subDescription}>{subContent}</p>\n        </section>\n      ))}\n    </section>\n  )\n\n  const createContentsElements = () => (\n    <section className={styles.contents}>\n      {contents.map((content, index) => (\n        <section key={index}>\n          <h3 className={styles.subTitle}>{content.subTitle}</h3>\n          {createSubContentsElements(content.subContents)}\n        </section>\n      ))}\n    </section>\n  )\n\n  return (\n    <div className={styles.category}>\n      <header>\n        <h2 className={styles.title}>{title}</h2>\n      </header>\n      {createContentsElements()}\n    </div>\n  )\n}\n\nexport default Category\n","import React from 'react'\n\nimport Area from '../../components/Area'\nimport Category from '../../components/Category'\n\nimport styles from './style.module.scss'\n\nimport { Career as db } from '../../DB'\n\nconst Career = () => {\n  return (\n    <Area title={db.title}>\n      {db.contents.map((category, index) => (\n        <Category title={category.title} contents={category.contents} key={index} />\n      ))}\n    </Area>\n  )\n}\n\nexport default Career\n","import React from 'react'\n\nimport Area from '../../components/Area'\nimport Category from '../../components/Category'\n\nimport styles from './style.module.scss'\n\nimport { Interest as db } from '../../DB'\n\nconst Introduce = () => {\n  return (\n    <Area title={db.title}>\n      {db.contents.map((category, index) => (\n        <Category title={category.title} contents={category.contents} key={index} />\n      ))}\n    </Area>\n  )\n}\n\nexport default Introduce\n","import CareerPage from '../pages/Career'\nimport IntroducePage from '../pages/Introduce'\nimport TechPage from '../pages/Tech'\n\nexport const Sidebar = {\n  profile:\n    'https://item.kakaocdn.net/do/c620e34ce78db64b44ff1e422a35e2787154249a3890514a43687a85e6b6cc82',\n  name: '박지현',\n  description: '웹 프론트엔드 프로그래머',\n  contents: [\n    {\n      title: '소개',\n      path: '/',\n      component: IntroducePage\n    },\n    {\n      title: '경력',\n      path: '/career',\n      component: CareerPage\n    },\n    {\n      title: '기술',\n      path: '/tech',\n      component: TechPage\n    }\n  ]\n}\n\nexport const Tech = {\n  title: '기술',\n  contents: [\n    {\n      title: '타이틀 1',\n      contents: [\n        {\n          subTitle: '서브 타이틀 1',\n          subContents: [ '서브 컨텐츠 1' ]\n        },\n        {\n          subTitle: '서브 타이틀 2',\n          subContents: [ '서브 컨텐츠 2' ]\n        }\n      ]\n    },\n    {\n      title: '타이틀 2',\n      contents: [\n        {\n          subTitle: '서브 타이틀 1',\n          subContents: [ '서브 컨텐츠 1', '서브 컨텐츠 2' ]\n        }\n      ]\n    }\n  ]\n}\n\nexport const Career = {\n  title: '경력',\n  contents: [\n    {\n      title: '회사 1',\n      contents: [\n        {\n          subTitle: '프로젝트 1',\n          subContents: [ '뭘 만듬1', '뭘 만듬2' ]\n        }\n      ]\n    }\n  ]\n}\n\nexport const Interest = {\n  title: '관심사',\n  contents: [\n    {\n      title: 'React',\n      contents: [\n        {\n          subTitle: '리액트로 만듬 1',\n          subContents: [ '뭘 만듬1', '뭘 만듬1' ]\n        }\n      ]\n    }\n  ]\n}\n","import React from 'react'\n\nimport Area from '../../components/Area'\nimport Category from '../../components/Category'\n\nimport styles from './style.module.scss'\n\nimport { Tech as db } from '../../DB'\n\nconst Tech = () => {\n  return (\n    <Area title={db.title}>\n      {db.contents.map((category, index) => (\n        <Category title={category.title} contents={category.contents} key={index} />\n      ))}\n    </Area>\n  )\n}\n\nexport default Tech\n","import React from 'react'\n\nimport styles from './style.module.scss'\n\nimport { Link } from 'react-router-dom'\n\nimport { Sidebar as db } from '../../DB'\n\nconst Sidebar = () => {\n  return (\n    <div className={styles.sidebar}>\n      <div className={styles.profileWrapper}>\n        <div className={styles.profileImageWrapper}>\n          <img className={styles.profile} src={db.profile} alt='profile' />\n        </div>\n        <p className={styles.profileName}>{db.name}</p>\n        <p className={styles.profileDescription}>{db.description}</p>\n      </div>\n      <div className={styles.contents}>\n        {db.contents.map((data) => (\n          <Link className={styles.link} to={data.path}>\n            <span>{data.title}</span>\n          </Link>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import React from 'react'\n\nimport styles from './style.module.scss'\n\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom'\n\nimport Sidebar from '../../components/Sidebar'\n\nimport { Sidebar as SidebarData } from '../../DB'\n\nconst sidebarDataReverse = SidebarData.contents.slice().reverse()\n\nconst Resume = () => {\n  return (\n    <div className={styles.resume}>\n      <Router>\n        <aside className={styles.leftSide}>\n          <Sidebar />\n        </aside>\n        <aside className={styles.rightSide}>\n          <Switch>{sidebarDataReverse.map((data) => <Route path={data.path} component={data.component} />)}</Switch>\n        </aside>\n      </Router>\n    </div>\n  )\n}\n\nexport default Resume\n","import React from 'react'\nimport './App.css'\n\nimport ResumePage from './pages/Resume'\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <ResumePage />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}